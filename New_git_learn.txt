Microsoft Windows [Version 10.0.19045.4894]
(c) Microsoft Corporation. All rights reserved.

C:\Users\admin\Desktop\JS>git
usage: git [-v | --version] [-h | --help] [-C <path>] [-c <name>=<value>]
           [--exec-path[=<path>]] [--html-path] [--man-path] [--info-path]
           [-p | --paginate | -P | --no-pager] [--no-replace-objects] [--bare]
           [--git-dir=<path>] [--work-tree=<path>] [--namespace=<name>]
           [--config-env=<name>=<envvar>] <command> [<args>]

These are common Git commands used in various situations:

start a working area (see also: git help tutorial)
   clone     Clone a repository into a new directory
   init      Create an empty Git repository or reinitialize an existing one

work on the current change (see also: git help everyday)
   add       Add file contents to the index
   mv        Move or rename a file, a directory, or a symlink
   restore   Restore working tree files
   rm        Remove files from the working tree and from the index

examine the history and state (see also: git help revisions)
   bisect    Use binary search to find the commit that introduced a bug
   diff      Show changes between commits, commit and working tree, etc
   grep      Print lines matching a pattern
   log       Show commit logs
   show      Show various types of objects
   status    Show the working tree status

grow, mark and tweak your common history
   branch    List, create, or delete branches
   commit    Record changes to the repository
   merge     Join two or more development histories together
   rebase    Reapply commits on top of another base tip
   reset     Reset current HEAD to the specified state
   switch    Switch branches
   tag       Create, list, delete or verify a tag object signed with GPG

collaborate (see also: git help workflows)
   fetch     Download objects and refs from another repository
   pull      Fetch from and integrate with another repository or a local branch
   push      Update remote refs along with associated objects

'git help -a' and 'git help -g' list available subcommands and some
concept guides. See 'git help <command>' or 'git help <concept>'
to read about a specific subcommand or concept.
See 'git help git' for an overview of the system.

C:\Users\admin\Desktop\JS>git chekout test
git: 'chekout' is not a git command. See 'git --help'.

The most similar command is
        checkout

C:\Users\admin\Desktop\JS>git checkout test
A       git_push.txt
Switched to branch 'test'

C:\Users\admin\Desktop\JS>git add git_push.txt

C:\Users\admin\Desktop\JS>git commit -m
error: switch `m' requires a value

C:\Users\admin\Desktop\JS>git commit
Aborting commit due to empty commit message.

C' is not recognized as an internal or external command,
operable program or batch file.

C:\Users\admin\Desktop\JS>
C:\Users\admin\Desktop\JS>
C:\Users\admin\Desktop\JS>git commit
Aborting commit due to empty commit message.

C:\Users\admin\Desktop\JS>
C:\Users\admin\Desktop\JS>
C:\Users\admin\Desktop\JS>
C:\Users\admin\Desktop\JS>
C:\Users\admin\Desktop\JS>
C:\Users\admin\Desktop\JS>
C:\Users\admin\Desktop\JS>git commit
hint: Waiting for your editor to close the file... "C:\Users\admin\AppData\Local\Programs\Microsoft VS Code\bin\code" --wait: line 1: C:\Users\admin\AppData\Local\Programs\Microsoft VS Code\bin\code: Device or resource busy
error: there was a problem with the editor '"C:\Users\admin\AppData\Local\Programs\Microsoft VS Code\bin\code" --wait'
Please supply the message using either -m or -F option.

C:\Users\admin\Desktop\JS>git commit
Aborting commit due to empty commit message.

C:\Users\admin\Desktop\JS>git commit -m "ready"
[test 3fdd178] ready
 2 files changed, 660 insertions(+)
 create mode 100644 git.txt
 create mode 100644 git_push.txt

C:\Users\admin\Desktop\JS>git push origin test
Enumerating objects: 5, done.
Counting objects: 100% (5/5), done.
Delta compression using up to 4 threads
Compressing objects: 100% (4/4), done.
Writing objects: 100% (4/4), 3.69 KiB | 419.00 KiB/s, done.
Total 4 (delta 1), reused 0 (delta 0), pack-reused 0 (from 0)
remote: Resolving deltas: 100% (1/1), done.
To https://github.com/Meet162/JS.git
   830a3f8..3fdd178  test -> test

C:\Users\admin\Desktop\JS>git checkout main
Switched to branch 'main'
Your branch is ahead of 'origin/main' by 1 commit.
  (use "git push" to publish your local commits)

C:\Users\admin\Desktop\JS>git checkout test
Switched to branch 'test'

C:\Users\admin\Desktop\JS>git branch
  js
  main
* test

C:\Users\admin\Desktop\JS>git branch -a
  js
  main
* test
  remotes/origin/main
  remotes/origin/test

C:\Users\admin\Desktop\JS>git branch -r
  origin/main
  origin/test

C:\Users\admin\Desktop\JS>